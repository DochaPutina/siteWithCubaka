/*
 * This file is generated by jOOQ.
 */
package com.tej.JooQDemo.jooq.sample.model.tables.records;


import com.tej.JooQDemo.jooq.sample.model.tables.Users;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record7<Integer, String, String, Integer, String, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>chubaka_site.users.id</code>.
     */
    public UsersRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>chubaka_site.users.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>chubaka_site.users.userName</code>.
     */
    public UsersRecord setUsername(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>chubaka_site.users.userName</code>.
     */
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>chubaka_site.users.password</code>.
     */
    public UsersRecord setPassword(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>chubaka_site.users.password</code>.
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>chubaka_site.users.money</code>.
     */
    public UsersRecord setMoney(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>chubaka_site.users.money</code>.
     */
    public Integer getMoney() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>chubaka_site.users.email</code>.
     */
    public UsersRecord setEmail(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>chubaka_site.users.email</code>.
     */
    public String getEmail() {
        return (String) get(4);
    }

    /**
     * Setter for <code>chubaka_site.users.number</code>.
     */
    public UsersRecord setNumber(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>chubaka_site.users.number</code>.
     */
    public String getNumber() {
        return (String) get(5);
    }

    /**
     * Setter for <code>chubaka_site.users.statusId</code>.
     */
    public UsersRecord setStatusid(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>chubaka_site.users.statusId</code>.
     */
    public Integer getStatusid() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, String, String, Integer, String, String, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, String, String, Integer, String, String, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Users.USERS.ID;
    }

    @Override
    public Field<String> field2() {
        return Users.USERS.USERNAME;
    }

    @Override
    public Field<String> field3() {
        return Users.USERS.PASSWORD;
    }

    @Override
    public Field<Integer> field4() {
        return Users.USERS.MONEY;
    }

    @Override
    public Field<String> field5() {
        return Users.USERS.EMAIL;
    }

    @Override
    public Field<String> field6() {
        return Users.USERS.NUMBER;
    }

    @Override
    public Field<Integer> field7() {
        return Users.USERS.STATUSID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUsername();
    }

    @Override
    public String component3() {
        return getPassword();
    }

    @Override
    public Integer component4() {
        return getMoney();
    }

    @Override
    public String component5() {
        return getEmail();
    }

    @Override
    public String component6() {
        return getNumber();
    }

    @Override
    public Integer component7() {
        return getStatusid();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUsername();
    }

    @Override
    public String value3() {
        return getPassword();
    }

    @Override
    public Integer value4() {
        return getMoney();
    }

    @Override
    public String value5() {
        return getEmail();
    }

    @Override
    public String value6() {
        return getNumber();
    }

    @Override
    public Integer value7() {
        return getStatusid();
    }

    @Override
    public UsersRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public UsersRecord value2(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public UsersRecord value3(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UsersRecord value4(Integer value) {
        setMoney(value);
        return this;
    }

    @Override
    public UsersRecord value5(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UsersRecord value6(String value) {
        setNumber(value);
        return this;
    }

    @Override
    public UsersRecord value7(Integer value) {
        setStatusid(value);
        return this;
    }

    @Override
    public UsersRecord values(Integer value1, String value2, String value3, Integer value4, String value5, String value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(Integer id, String username, String password, Integer money, String email, String number, Integer statusid) {
        super(Users.USERS);

        setId(id);
        setUsername(username);
        setPassword(password);
        setMoney(money);
        setEmail(email);
        setNumber(number);
        setStatusid(statusid);
    }
}
