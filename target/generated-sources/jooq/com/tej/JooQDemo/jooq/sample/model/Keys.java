/*
 * This file is generated by jOOQ.
 */
package com.tej.JooQDemo.jooq.sample.model;


import com.tej.JooQDemo.jooq.sample.model.tables.Orders;
import com.tej.JooQDemo.jooq.sample.model.tables.Product;
import com.tej.JooQDemo.jooq.sample.model.tables.Status;
import com.tej.JooQDemo.jooq.sample.model.tables.Users;
import com.tej.JooQDemo.jooq.sample.model.tables.records.OrdersRecord;
import com.tej.JooQDemo.jooq.sample.model.tables.records.ProductRecord;
import com.tej.JooQDemo.jooq.sample.model.tables.records.StatusRecord;
import com.tej.JooQDemo.jooq.sample.model.tables.records.UsersRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * chubaka_site.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<OrdersRecord> KEY_ORDERS_PRIMARY = Internal.createUniqueKey(Orders.ORDERS, DSL.name("KEY_orders_PRIMARY"), new TableField[] { Orders.ORDERS.CLIENTID, Orders.ORDERS.PRODUCTSID }, true);
    public static final UniqueKey<ProductRecord> KEY_PRODUCT_PRIMARY = Internal.createUniqueKey(Product.PRODUCT, DSL.name("KEY_product_PRIMARY"), new TableField[] { Product.PRODUCT.ID }, true);
    public static final UniqueKey<StatusRecord> KEY_STATUS_PRIMARY = Internal.createUniqueKey(Status.STATUS, DSL.name("KEY_status_PRIMARY"), new TableField[] { Status.STATUS.ID }, true);
    public static final UniqueKey<UsersRecord> KEY_USERS_PRIMARY = Internal.createUniqueKey(Users.USERS, DSL.name("KEY_users_PRIMARY"), new TableField[] { Users.USERS.ID, Users.USERS.STATUSID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<OrdersRecord, ProductRecord> ORDERS_FK0 = Internal.createForeignKey(Orders.ORDERS, DSL.name("orders_fk0"), new TableField[] { Orders.ORDERS.PRODUCTSID }, Keys.KEY_PRODUCT_PRIMARY, new TableField[] { Product.PRODUCT.ID }, true);
    public static final ForeignKey<UsersRecord, OrdersRecord> USER_FK0 = Internal.createForeignKey(Users.USERS, DSL.name("user_fk0"), new TableField[] { Users.USERS.ID }, Keys.KEY_ORDERS_PRIMARY, new TableField[] { Orders.ORDERS.CLIENTID }, true);
    public static final ForeignKey<UsersRecord, StatusRecord> USER_FK2 = Internal.createForeignKey(Users.USERS, DSL.name("user_fk2"), new TableField[] { Users.USERS.STATUSID }, Keys.KEY_STATUS_PRIMARY, new TableField[] { Status.STATUS.ID }, true);
}
